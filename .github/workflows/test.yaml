name: Lerna Publish

on:
  push:
    branches:
      - fre


jobs:
  get_versions:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'

    - name: Install dependencies
      run: npm install

    - name: Get app versions
      id: get_versions
      run: |
        versions=()
        for folder in apps/*; do
          if [ -f "$folder/package.json" ]; then
            version=$(jq -r '.version' "$folder/package.json")
            versions+=("$folder:$version")
          fi
        done
        echo "${versions[@]}" > app_versions.txt

  update_version:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'

    - name: Read app versions from file
      id: read_versions
      run: |
        versions=$(<app_versions.txt)
        echo "::set-output name=app_versions::$versions"

    - name: Update package versions
      run: |
        while IFS= read -r line; do
          folder=$(echo "$line" | cut -d':' -f1)
          version=$(echo "$line" | cut -d':' -f2)
          if [[ $version == *"alpha"* ]]; then
            minor_version=$(echo $version | sed -E 's/^.*([0-9]+\.[0-9]+).*$/\1/')
            new_version="${minor_version}.0"
            jq ".version = \"${new_version}\"" "$folder/package.json" > "$folder/package.tmp" && mv "$folder/package.tmp" "$folder/package.json"
          fi
        done <<< "${{ steps.read_versions.outputs.app_versions }}"

    - name: Commit and push changes
      run: |
        git config --global user.email "actions@github.com"
        git config --global user.name "GitHub Actions"
        git add apps/*/package.json
        git commit -m "Auto-update package versions" --all
        git push
